- name: restore database Client
  commvault.ansible.database.restore:
    client: "{{ var_client }}"
    backupset: "{{ var_backupset }}"
    subclient: "{{ var_subclient }}"
    agent_type: "{{ var_agent_type }}"
    instance: "{{ var_instance }}"
    content: "{{var_content }}"
    from_date: "{{ var_from_date }}"
    to_date: "{{ var_to_date }}"
    destination_client: "{{ var_destination_client }}"
    destination_instance: "{{ var_destination_instance }}"
    in_place: "{{ var_in_place }}"
  register: cv_job
  tags:
    - restore


- name: wait for task completion Job for multi instance
  commvault.ansible.job.wait_for_task_completion:
    job_id: "{{  item  }}"
    timeout: "{{ var_commvault_timeout }}"
  loop: "{{ cv_job  | community.general.json_query('results[*].job_id') }}"
  when: item | length >= 2
  tags:
    - restore


- name: wait for task completion Job for an instance
  commvault.ansible.job.wait_for_task_completion:
    job_id: "{{  cv_job | community.general.json_query('job.id')  }}"
    timeout: "{{ var_commvault_timeout }}"
  when: cv_job | community.general.json_query('results[*].job_id') is undefined
  tags:
    - restore